{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/templates/page.js","webpack:///./node_modules/core-js/modules/es6.number.constructor.js"],"names":["Layout","children","data","navItemStyle","css","styles","to","allFile","nodes","map","childMarkdownRemark","fields","slug","frontmatter","title","loader","enqueue","m","module","exports","require","default","ProdPageRenderer","location","pageResources","React","createElement","InternalPageRenderer","json","Page","content","markdownRemark","console","log","className","dangerouslySetInnerHTML","__html","html","query","global","has","cof","inheritIfRequired","toPrimitive","fails","gOPN","f","gOPD","dP","$trim","trim","$Number","Base","proto","prototype","BROKEN_COF","TRIM","String","toNumber","argument","it","length","third","radix","maxCode","first","charCodeAt","NaN","code","digits","slice","i","l","parseInt","value","arguments","that","this","valueOf","call","key","keys","split","j","constructor"],"mappings":"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","file":"component---src-templates-page-js-cc1e7ea6c3c654d7e1ba.js","sourcesContent":["import React from \"react\";\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\nimport { css, Global } from \"@emotion/core\";\n\nexport default function Layout({ children }) {\n    const data = useStaticQuery(\n        graphql`\n          query {\n            allFile(filter: {internal: {mediaType: {eq: \"text/markdown\"}}, sourceInstanceName: {eq: \"pages\"}}) {\n              nodes {\n                childMarkdownRemark {\n                  excerpt\n                  frontmatter {\n                    title\n                  }\n                  html\n                  fields {\n                    slug\n                  }\n                }\n              }\n            }\n          }\n        `\n    );\n    \n    const navBgColor = 'hsl(275,59%,47%)';\n    const bgColor = 'hsl(0, 0%, 14%)';\n    const fgColor = 'hsl(0, 0%, 70%)';\n    const mainFontColor = 'hsl(0, 0%, 90%)'\n    const fgHighlightedColor = mainFontColor;\n  \n    const navItemStyle = css`\n      padding: 24px;\n      text-decoration: none;\n      color: ${fgColor};\n      &:hover {\n        color: ${fgHighlightedColor};\n      }\n    `;\n  \n    return (\n        <div>\n        <Global\n          styles={css`\n            body {\n              margin: 0;\n              background-color: ${bgColor};\n              color: ${mainFontColor}; \n            }\n  \n            @font-face {\n              font-family: 'Ubuntu';\n              src: url('https://fonts.googleapis.com/css2?family=Raleway&display=swap');\n            }\n  \n            .index-section {\n              display: flex;\n              flex-direction: column;\n              width: 100%;\n              height: 100vh;\n              justify-content: center;\n              align-items: center;\n              margin: 0;\n            }\n\n            .link {\n              color: inherit;\n              text-decoration: none;\n            }\n\n            h1 {\n              font-family: 'Ubuntu', sans-serif;\n              font-weight: 600;\n              font-size: 4rem;\n            }\n          `}\n        />\n        <header\n          css={css`\n              display: flex;\n              justify-content: space-between;\n              align-items: center;\n              top: 0;\n              left: 0;\n              margin: 0;\n              background-color: ${navBgColor};\n              position: fixed;\n              width: 100%;\n            `}\n        >\n          <div css={css`padding: 15px; color: ${fgColor}`}>\n            mdwyer\n          </div>\n          <nav css={css`\n            display: flex;\n            justify-content: flex-end;\n          `}>\n            <Link to=\"/\" css={navItemStyle}>Home</Link>\n            {\n              data.allFile.nodes.map(({childMarkdownRemark}) => {\n                return <Link\n                          to={childMarkdownRemark.fields.slug}\n                          css={navItemStyle}\n                        >{childMarkdownRemark.frontmatter.title}</Link>\n              })\n            }\n          </nav>\n        </header>\n        <main>\n            {children}\n        </main>\n      </div>\n    );\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n\n  // query is a stringified number like `3303882` when wrapped with graphql, If a user forgets\n  // to wrap the query in a grqphql, then casting it to a Number results in `NaN` allowing us to\n  // catch the misuse of the API and give proper direction\n  if (isNaN(Number(query))) {\n    throw new Error(`useStaticQuery was called with a string but expects to be called using \\`graphql\\`. Try this:\n\nimport { useStaticQuery, graphql } from 'gatsby';\n\nuseStaticQuery(graphql\\`${query}\\`);\n`)\n  }\n\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport Layout from \"../components/layout\";\nimport { graphql } from \"gatsby\";\n\nexport default function Page({ data }) {\n  const content = data.markdownRemark;\n  console.log(\"content: \", content);\n  return (\n    <Layout>\n      <section className=\"index-section\">\n        <h1>{content.frontmatter.title}</h1>\n        <div dangerouslySetInnerHTML={{ __html: content.html }} />\n      </section>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug }}) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`;","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n"],"sourceRoot":""}