{"version":3,"sources":["webpack:///./src/components/blognavigation.js","webpack:///./src/utils/helpers.js","webpack:///./src/components/bodytext.js","webpack:///./src/templates/blog-post.js"],"names":["BlogNavigation","previous","next","css","className","to","path","rel","label","generateNavigation","Boolean","BodyText","content","Fragment","dangerouslySetInnerHTML","__html","BlogPost","data","pageContext","markdownRemark","previousSlug","previousTitle","nextSlug","nextTitle","frontmatter","title","date","html","query"],"mappings":"6FAAA,wE,sPAIe,SAASA,EAAT,GAA2C,IAAlBC,EAAiB,EAAjBA,SAAUC,EAAO,EAAPA,KAChD,OACE,mBAAKC,IAAG,GAIN,mBAAKA,IAAG,GAGLF,GACK,YAAC,OAAD,CACEG,UAAU,OACVD,IAAG,EAGHE,GAAIJ,EAASK,KACbC,IAAI,QACHN,EAASO,QAMpB,mBAAKL,IAAG,GAIJD,GACE,YAAC,OAAD,CACEE,UAAU,OACVD,IAAG,EAGHE,GAAIH,EAAKI,KACTC,IAAI,QACHL,EAAKM,W,kCCvCb,SAASC,EAAmBH,EAAME,GACvC,OAAIE,QAAQJ,GACH,CACLA,KAAMA,EACNE,SAIG,KART,mC,qRCGe,SAASG,EAAT,GAAgC,IAAZC,EAAW,EAAXA,QACjC,OACE,YAAC,IAAMC,SAAP,KACE,mBACEC,wBAAyB,CAAEC,OAAQH,GACnCT,IAAG,K,6bCEI,SAASa,EAAT,GAAwC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,YAChCN,EAAUK,EAAKE,eAEfC,EAAe,IAAMF,EAAa,wBAClCG,EAAgB,IAAMH,EAAa,8BAEnCI,EAAW,IAAMJ,EAAa,oBAC9BK,EAAY,IAAML,EAAa,0BAE/BjB,EAAWQ,YAAmBW,EAAcC,GAC5CnB,EAAOO,YAAmBa,EAAUC,GAE1C,OACE,YAAC,IAAD,KACE,oBAAMpB,IAAG,GAOP,uBAASA,IAAG,GAIV,sBAAQA,IAAG,GAGT,kBAAIA,IAAG,GAIHS,EAAQY,YAAYC,OACxB,iBAAGtB,IAAG,GAGJ,YAAC,IAAD,CACEA,IAAG,IAGFS,EAAQY,YAAYE,OAG3B,2BACE,YAACf,EAAD,CAAUC,QAASA,EAAQe,QAE7B,sBAAQxB,IAAG,GAGT,YAAC,IAAD,CACEF,SAAUA,EACVC,KAAMA,QASb,IAAM0B,EAAK","file":"component---src-templates-blog-post-js-68096f9d546596330b2a.js","sourcesContent":["import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport { Link } from \"gatsby\";\n\nexport default function BlogNavigation({previous, next}) {\n  return (\n    <div css={css`\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n    `}>\n      <div css={css`\n        text-align: left;\n      `}>\n        {previous && (\n              <Link\n                className=\"link\"\n                css={css`\n                  grid-column: 1;\n                `}\n                to={previous.path}\n                rel=\"prev\">\n                {previous.label}\n              </Link>\n\n          )\n        }\n      </div>\n      <div css={css`\n        text-align: right;\n      `}>\n        {\n          next && (\n            <Link\n              className=\"link\"\n              css={css`\n                grid-column: 2;\n              `}\n              to={next.path}\n              rel=\"next\">\n              {next.label}\n            </Link>\n          )\n        }\n      </div>\n    </div>\n  );\n}","export function generateNavigation(path, label) {\n  if (Boolean(path)) {\n    return {\n      path: path,\n      label\n    };\n  }\n\n  return null;\n}","import React from \"react\";\nimport { css } from \"@emotion/core\";\n\nexport default function BodyText({ content }) {\n  return (\n    <React.Fragment>\n      <div\n        dangerouslySetInnerHTML={{ __html: content }}\n        css={css`\n          line-height: 1.6em;\n          p {\n            margin: 0 0 3em;\n          }\n        `}\n        />\n    </React.Fragment>\n  );\n}","import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport { FaCalendar } from \"react-icons/fa\";\nimport BlogNavigation from \"../components/blognavigation\";\nimport BodyText from \"../components/bodytext\"\nimport { generateNavigation } from \"../utils/helpers\";\nimport _ from 'lodash';\n\nexport default function BlogPost({data, pageContext}) {\n  const content = data.markdownRemark;\n\n  const previousSlug = _.get(pageContext, 'previous.fields.slug');\n  const previousTitle = _.get(pageContext, 'previous.frontmatter.title');\n\n  const nextSlug = _.get(pageContext, 'next.fields.slug');\n  const nextTitle = _.get(pageContext, 'next.frontmatter.title');\n\n  const previous = generateNavigation(previousSlug, previousTitle);\n  const next = generateNavigation(nextSlug, nextTitle);\n\n  return (\n    <Layout>\n      <main css={css`\n        margin-left: auto;\n        margin-right: auto;\n        padding: 5em 3em;\n        max-height: 80vh;\n        max-width: 80vw;\n      `}>\n        <article css={css`\n          max-width: 50vw;\n          margin: 0 auto;\n        `}>\n          <header css={css`\n            margin-bottom: 2em;\n          `}>\n            <h1 css={css`\n              text-align: left;\n              margin-top: 2em;\n              margin-bottom: 1em;\n            `}>{content.frontmatter.title}</h1>\n            <p css={css`\n              margin-bottom: 4em;\n            `}>\n              <FaCalendar\n                css={css`\n                  margin: 0 10px 0 0;\n                `} />\n                {content.frontmatter.date}\n            </p>\n          </header>\n          <section>\n            <BodyText content={content.html} />\n          </section>\n          <footer css={css`\n            margin-top: 2em;\n          `}>\n            <BlogNavigation\n              previous={previous}\n              next={next}\n            />\n          </footer>\n        </article>\n      </main>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug }}) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"dddd, MMMM Do YYYY\")\n      }\n    }\n  }\n`;"],"sourceRoot":""}