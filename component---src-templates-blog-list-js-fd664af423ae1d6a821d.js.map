{"version":3,"sources":["webpack:///./src/components/blognavigation.js","webpack:///./src/utils/helpers.js","webpack:///./src/templates/blog-list.js","webpack:///./src/components/blogwall.js"],"names":["BlogNavigation","previous","next","css","className","to","path","rel","label","generateNavigation","Boolean","Posts","data","pageContext","posts","previousPagePath","nextPagePath","query","BlogWall","Fragment","map","p","childMarkdownRemark","fluid","key","fields","slug","frontmatter","title","date","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"6FAAA,wE,sPAIe,SAASA,EAAT,GAA2C,IAAlBC,EAAiB,EAAjBA,SAAUC,EAAO,EAAPA,KAChD,OACE,mBAAKC,IAAG,GAIN,mBAAKA,IAAG,GAGLF,GACK,YAAC,OAAD,CACEG,UAAU,OACVD,IAAG,EAGHE,GAAIJ,EAASK,KACbC,IAAI,QACHN,EAASO,QAMpB,mBAAKL,IAAG,GAIJD,GACE,YAAC,OAAD,CACEE,UAAU,OACVD,IAAG,EAGHE,GAAIH,EAAKI,KACTC,IAAI,QACHL,EAAKM,W,kCCvCb,SAASC,EAAmBH,EAAME,GACvC,OAAIE,QAAQJ,GACH,CACLA,KAAMA,EACNE,SAIG,KART,mC,sUCQe,SAASG,EAAT,GAAqC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,YAC7BC,EAAQ,IAAMF,EAAM,eAEpBX,EAAWQ,YAAmBI,EAAYE,iBAAkB,YAC5Db,EAAOO,YAAmBI,EAAYG,aAAc,QAE1D,OACE,YAAC,IAAD,KACE,uBAASb,IAAG,GAOV,uBACE,YAAC,IAAD,CACEF,SAAUA,EACVC,KAAMA,IAER,uBACA,YAAC,IAAD,CAAUY,MAAOA,OAOpB,IAAMG,EAAK,c,keC7BH,SAASC,EAAT,GAA8B,IAAVJ,EAAS,EAATA,MACjC,OACE,YAAC,IAAMK,SAAP,KACGL,EAAMM,KAAI,YAA+B,IAARC,EAAO,EAA5BC,oBACLC,EAAQ,IAAMF,EAAG,2CACvB,OACE,YAAC,IAAMF,SAAP,CAAgBK,IAAKH,EAAEI,OAAOC,MAC5B,uBACEvB,IAAG,GAID,0BACE,YAAC,IAAD,CACEoB,MAAOA,EACPpB,IAAG,IAEL,kBAAIA,IAAG,GAGL,YAAC,OAAD,CACEE,GAAIgB,EAAEI,OAAOC,KACbvB,IAAG,GAGEkB,EAAEM,YAAYC,QAGvB,yBACE,YAAC,IAAD,CAAYzB,IAAG,IADjB,KAGUkB,EAAEM,YAAYE,OAG1B,2BACE,iBACE1B,IAAG,EAIH2B,wBAAyB,CACvBC,OAAQV,EAAEM,YAAYK,aAAeX,EAAEY","file":"component---src-templates-blog-list-js-fd664af423ae1d6a821d.js","sourcesContent":["import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport { Link } from \"gatsby\";\n\nexport default function BlogNavigation({previous, next}) {\n  return (\n    <div css={css`\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n    `}>\n      <div css={css`\n        text-align: left;\n      `}>\n        {previous && (\n              <Link\n                className=\"link\"\n                css={css`\n                  grid-column: 1;\n                `}\n                to={previous.path}\n                rel=\"prev\">\n                {previous.label}\n              </Link>\n\n          )\n        }\n      </div>\n      <div css={css`\n        text-align: right;\n      `}>\n        {\n          next && (\n            <Link\n              className=\"link\"\n              css={css`\n                grid-column: 2;\n              `}\n              to={next.path}\n              rel=\"next\">\n              {next.label}\n            </Link>\n          )\n        }\n      </div>\n    </div>\n  );\n}","export function generateNavigation(path, label) {\n  if (Boolean(path)) {\n    return {\n      path: path,\n      label\n    };\n  }\n\n  return null;\n}","import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport Layout from \"../components/layout\";\nimport BlogWall from \"../components/blogwall\";\nimport BlogNavigation from \"../components/blognavigation\";\nimport { generateNavigation } from \"../utils/helpers\";\nimport _ from \"lodash\";\n\nexport default function Posts({data, pageContext}) {\n  const posts = _.get(data, \"posts.nodes\");\n\n  const previous = generateNavigation(pageContext.previousPagePath, 'Previous');\n  const next = generateNavigation(pageContext.nextPagePath, 'Next');\n\n  return (\n    <Layout>\n      <section css={css`\n        margin-left: auto;\n        margin-right: auto;\n        padding: 5em 3em;\n        max-height: 80vh;\n        max-width: 80vw;\n      `}>\n        <div>\n          <BlogNavigation\n            previous={previous}\n            next={next}\n          />\n          <hr />\n          <BlogWall posts={posts} />\n        </div>\n      </section>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query($skip: Int = 0, $limit: Int = 3) {\n    posts: allFile(\n      filter: {\n        sourceInstanceName: {eq: \"blog\"},\n        internal: {mediaType: {eq: \"text/markdown\"}}\n      },\n      sort: {fields: childMarkdownRemark___frontmatter___date, order: DESC},\n      limit: $limit,\n      skip: $skip\n    ) {\n      nodes {\n        childMarkdownRemark {\n          id\n          excerpt\n          frontmatter {\n            title\n            date(formatString: \"dddd, MMMM Do YYYY\")\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;","import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport { Link } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport { FaCalendar } from \"react-icons/fa\";\nimport _ from 'lodash';\n\nexport default function BlogWall({ posts }) {\n  return (\n    <React.Fragment>\n      {posts.map(({childMarkdownRemark: p}) => {\n        const fluid = _.get(p, \"frontmatter.cover.childImageSharp.fluid\");\n        return (\n          <React.Fragment key={p.fields.slug}>\n            <article\n              css={css`\n                max-width: 40vw;\n                margin: 1.5em auto;\n              `}>\n                <header>\n                  <Img\n                    fluid={fluid}\n                    css={css`border-radius: 10px;`}\n                  />\n                  <h2 css={css`\n                    margin-bottom: 0.75em;\n                  `}>\n                    <Link\n                      to={p.fields.slug}\n                      css={css`\n                        color: inherit;\n                      `}>\n                          {p.frontmatter.title}\n                    </Link>\n                  </h2>\n                  <small>\n                    <FaCalendar css={css`\n                      margin: 0 10px 0 0;\n                    `} />  {p.frontmatter.date}\n                  </small>\n                </header>\n                <section>\n                  <p\n                    css={css`\n                      margin-top: 0.75em;\n                      margin-bottom: 2.5em;\n                    `}\n                    dangerouslySetInnerHTML={{\n                      __html: p.frontmatter.description || p.excerpt\n                    }}\n                  />\n                </section>\n            </article>\n          </React.Fragment>\n        );\n      })}\n    </React.Fragment>\n  );\n}"],"sourceRoot":""}